@startuml
enum com.crypto.app.domain.TransactionStatus {
+  PENDING
+  CONFIRMED
+  REJECTED
}

class com.crypto.app.domain.EthereumTransaction {
+ BigDecimal calculateFee()
}

class com.crypto.app.domain.Wallet {
- String id
- CryptoType type
- String address
- BigDecimal balance
+ String getId()
+ CryptoType getType()
+ String getAddress()
+ BigDecimal getBalance()
+ void setBalance(BigDecimal)
+ String toString()
}


interface com.crypto.app.domain.Identifiable {
~ String getId()
}

abstract class com.crypto.app.domain.Transaction {
- String id
- CryptoType type
- String fromAddress
- String toAddress
- BigDecimal amount
- Priority priority
- LocalDateTime createdAt
- BigDecimal fee
- TransactionStatus status
+ String getId()
+ CryptoType getType()
+ String getFromAddress()
+ String getToAddress()
+ BigDecimal getAmount()
+ Priority getPriority()
+ LocalDateTime getCreatedAt()
+ BigDecimal getFee()
+ void setFee(BigDecimal)
+ TransactionStatus getStatus()
+ void setStatus(TransactionStatus)
+ {abstract}BigDecimal calculateFee()
+ int compareTo(Transaction)
+ String toString()
}


enum com.crypto.app.domain.CryptoType {
+  BITCOIN
+  ETHEREUM
}

enum com.crypto.app.domain.Priority {
+  ECONOMIQUE
+  STANDARD
+  RAPIDE
}

class com.crypto.app.domain.BitcoinTransaction {
+ BigDecimal calculateFee()
}



com.crypto.app.domain.Transaction <|-- com.crypto.app.domain.EthereumTransaction
com.crypto.app.domain.Identifiable <|.. com.crypto.app.domain.Wallet
com.crypto.app.domain.Identifiable <|.. com.crypto.app.domain.Transaction
com.crypto.app.domain.Comparable <|.. com.crypto.app.domain.Transaction
com.crypto.app.domain.Transaction <|-- com.crypto.app.domain.BitcoinTransaction
@enduml